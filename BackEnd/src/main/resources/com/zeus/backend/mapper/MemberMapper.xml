<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeus.backend.mapper.MemberMapper">
	<!-- 사용자 정의 resultMap 요소 정의 -->
	<resultMap type="map" id="memberMap">
		<result property="user_name" column="user_name" />
		<result property="coin" column="coin" />
		<result property="user_tel" column="user_tel" />
		<result property="user_email" column="user_email" />
		<result property="user_gender" column="user_gender" />
		<result property="user_birthday" column="user_birthday" />
		<result property="user_nickname" column="user_nickname" />
		<result property="image_url" column="image_url" />
		<result property="reg_date" column="reg_date" />
		<collection property="authorities" column="user_no"
			ofType="map" select="selectAuthorities" />
	</resultMap>
	<resultMap type="map" id="authoritiesMap">
		<result property="user_no" column="user_no" />
		<result property="authority" column="authority" />
	</resultMap>
	<!-- 등록 처리 -->
	<insert id="create">
        CALL insert_user_data(
            #{user_name, jdbcType=NVARCHAR, mode=IN},
            #{login_type_no, jdbcType=NUMBER, mode=IN},
            #{authority, jdbcType=VARCHAR, mode=IN},
            #{user_nickname, jdbcType=VARCHAR, mode=IN},
            #{user_tel, jdbcType=VARCHAR, mode=IN},
            #{user_email, jdbcType=VARCHAR, mode=IN},
            #{user_gender, jdbcType=VARCHAR, mode=IN},
            #{image_url, jdbcType=VARCHAR, mode=IN},
            #{user_birthday, jdbcType=DATE, mode=IN},
            #{user_password, jdbcType=VARCHAR, mode=IN},
            #{social_code, jdbcType=NUMBER, mode=IN},  
            #{access_token, jdbcType=VARCHAR, mode=IN}
        )
    </insert>
	<!-- 권한 생성 -->
	<insert id="createAuth">
		INSERT INTO authrities(user_no, authority) 
		VALUES(user_no_seq.CURRVAL, #{authority})
	</insert>
	<!-- 목록 조회 -->
	<select id="list" resultType="java.util.Map">
		SELECT
		u.user_name, u.coin,
		a.user_tel, a.user_email, a.user_gender, a.user_birthday,
		p.user_nickname, p.image_url, p.reg_date 
		FROM USERS u 
		JOIN 
		authentication a ON u.user_no = a.user_no 
		JOIN profile p ON u.user_no = p.user_no 
		ORDER BY p.reg_date DESC
	</select>
	<!-- 상세 조회 -->
	<select id="read" resultMap="memberMap">
		SELECT
		u.user_name, u.coin,
		a.user_tel, a.user_email,
		a.user_gender, a.user_birthday,
		p.user_nickname,
		p.image_url, p.reg_date, u.user_no 
		FROM USERS u 
		JOIN authentication a ON u.user_no = a.user_no 
		JOIN profile p ON u.user_no = p.user_no 
		LEFT JOIN authrities ar ON u.user_no = ar.user_no 
		WHERE u.user_no = #{user_no}
	</select>
	<!-- 권한 상세 조회 -->
	<select id="selectAuthorities" resultMap="authoritiesMap">
		SELECT user_no, authority FROM authrities WHERE user_no = #{user_no}
	</select>
	<!-- 권한 수정 -->
	<insert id="modifyAuth">
		INSERT INTO authrities(user_no, authority) VALUES (#{user_no},#{authority})
	</insert>
	<!-- 수정 처리 사용 -->
	<update id="update">
		UPDATE profile SET user_nickname =#{user_nickname},image_url =#{image_url} WHERE user_no = #{user_no}
	</update>
	<!-- 삭제 처리 -->
	<delete id="delete">
	DELETE FROM users WHERE user_no = #{user_no}
	</delete>
	<!-- 권한 삭제 -->
	<delete id="deleteAuth">
	DELETE FROM authrities WHERE user_no = #{user_no}
	</delete>
	<!-- 회원 테이블의 데이터 건수 조회 -->
	<select id="countAll" resultType="int">
	SELECT count(*) FROM users
	</select>
</mapper>